version: v1.0
name: Terraform Destroy - Azure VNET Infrastructure

agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:
  - name: "Terraform Destroy"
    task:
      env_vars:
        - name: TF_VAR_subscription_id
          from_secret: AZURE_SUBSCRIPTION_ID
        - name: TF_VAR_tenant_id
          from_secret: AZURE_TENANT_ID
        - name: TF_VAR_client_id
          from_secret: AZURE_CLIENT_ID
        - name: TF_VAR_client_secret
          from_secret: AZURE_CLIENT_SECRET
        - name: TF_VAR_csp_url
          from_secret: INFOBLOX_CSP_URL
        - name: TF_VAR_api_key
          from_secret: INFOBLOX_API_KEY
        - name: TF_VAR_region
          value: "West Europe"
        - name: TF_VAR_resource_group
          value: "blox42-rg"
        - name: TF_VAR_infoblox_address_block_name
          value: "Azure VNET Address Block"
        - name: TF_VAR_vnet_prefix
          value: "blox42-demo"
        - name: TF_VAR_vnets
          value: '["vnet1", "vnet2", "vnet3", "vnet4", "vnet5"]'
        - name: TF_VAR_subnet_cidr
          value: "24"
        - name: TF_VAR_subnet_comment
          value: "Terraform Demo Entry via Semaphore CI/CD"
        - name: TF_VAR_subnet_tags
          value: '{"owner": "semaphore", "managed": "terraform", "usage": "vnet"}'
      secrets:
        - name: azure-credentials
        - name: infoblox-credentials
      prologue:
        commands:
          - checkout
          - cache restore terraform-$SEMAPHORE_GIT_BRANCH-$(checksum *.tf)
          - cache restore terraform-plugins
      jobs:
      - name: Destroy
        commands:
          # Install Terraform
          - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          - sudo apt update && sudo apt install terraform=1.5.7-1
          
          # Initialize and destroy infrastructure
          - terraform --version
          - terraform init -upgrade
          - terraform destroy -auto-approve
          
          # Clean up artifacts
          - artifact pull project tfplan || true
          - rm -f tfplan
      epilogue:
        commands:
          - echo "Infrastructure destroyed successfully"